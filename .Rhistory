install.packages("raster")
install.packages("Kendall")
install.packages("trend")
install.packages("tseries")
install.packages("timeSeries")
install.packages("imputeTS")
install.packages("corrplot")
install.packages("regclass")
install.packages("factoextra")
# Add plot
plot(NoiseINT2S.RST,DenoiseINT2S.RST,
maxpixels=282240)
setwd("D:/6_Praktikum/2_Spatial Data Mining/Acara 8 (Deep Learning)/Data")
library(raster)
library(rgdal)
csv.res <- read.csv2("results_cnn3.csv")
csv.res <- data.frame(csv.res)
xmean <- list()
ymean <- list()
val <- list()
prob <- csv.res$output
path <- csv.res$name
for(i in 1:length(path)){
print(paste0("start ", i, "/", length(path)))
rst <- raster(path[i])
a <- extent(rst)
a <- as.vector(a)
xmean[i] <- a[1] + ((a[2] - a[1])/2)
ymean[i] <- a[3] + ((a[4] - a[3])/2)
val[i] <- as.numeric(prob[i])
}
write.csv(csv2, "plot_nilai_prob.csv")
library(raster)
library(rgdal)
csv.res <- read.csv2("results_cnn3.csv")
csv.res <- data.frame(csv.res)
library(raster)
library(rgdal)
csv.res <- read.csv2("results_cnn3.csv")
csv.res <- data.frame(csv.res)
xmean <- list()
ymean <- list()
val <- list()
prob <- csv.res$output
csv.res <- read.csv2("results_cnn3.csv")
csv.res <- data.frame(csv.res)
xmean <- list()
ymean <- list()
val <- list()
library(raster)
library(rgdal)
csv.res <- read.csv2("results_cnn3.csv")
csv.res <- data.frame(csv.res)
xmean <- list()
ymean <- list()
val <- list()
prob <- csv.res$output
path <- csv.res$name
csv.res <- read.csv("results_cnn3.csv")
csv.res <- data.frame(csv.res)
xmean <- list()
ymean <- list()
val <- list()
prob <- csv.res$output
path <- csv.res$name
for(i in 1:length(path)){
print(paste0("start ", i, "/", length(path)))
rst <- raster(path[i])
a <- extent(rst)
a <- as.vector(a)
xmean[i] <- a[1] + ((a[2] - a[1])/2)
ymean[i] <- a[3] + ((a[4] - a[3])/2)
val[i] <- as.numeric(prob[i])
}
write.csv(csv2, "plot_nilai_prob.csv")
write.csv(csv, "plot_nilai_prob.csv")
combine(xmean, ymean, val)
bind(xmean, ymean, val)
bind(list(xmean, ymean, val))
bind_rows(list(xmean, ymean, val))
df_list <- list(xmean,ymean,val)
Reduce(function(x, y) merge(x, y, all=TRUE), df_list)
df_fix <- Reduce(function(x, y) merge(x, y, all=TRUE), df_list)
write.csv(df_fix, "plot_nilai_prob.csv")
df_list <- c(xmean,ymean,val)
df_list <- c(xmean,ymean,val)
write.csv(df_list, "plot_nilai_prob.csv")
write.csv2(df_list, "plot_nilai_prob.csv")
csv.res <- read.csv2("results_cnn3.csv")
csv.res <- data.frame(csv.res)
xmean <- list()
ymean <- list()
val <- list()
prob <- csv.res$output
path <- csv.res$name
for(i in 1:length(path)){
print(paste0("start ", i, "/", length(path)))
rst <- raster(path[i])
a <- extent(rst)
a <- as.vector(a)
xmean[i] <- a[1] + ((a[2] - a[1])/2)
ymean[i] <- a[3] + ((a[4] - a[3])/2)
val[i] <- as.numeric(prob[i])
}
csv.res <- read.csv("results_cnn3.csv")
csv.res <- data.frame(csv.res)
xmean <- list()
ymean <- list()
val <- list()
prob <- csv.res$output
path <- csv.res$name
for(i in 1:length(path)){
print(paste0("start ", i, "/", length(path)))
rst <- raster(path[i])
a <- extent(rst)
a <- as.vector(a)
xmean[i] <- a[1] + ((a[2] - a[1])/2)
ymean[i] <- a[3] + ((a[4] - a[3])/2)
val[i] <- as.numeric(prob[i])
}
haha <- cbind(xmean,ymean,val)
library(dplyr)
haha <- bind_rows(xmean,ymean,val)
haha <- bind_cols(xmean,ymean,val)
write.csv(haha, "plot_nilai_prob.csv")
library(raster)
library(rgdal)
library(dplyr)
csv.res <- read.csv("results_cnn3.csv")
csv.res <- data.frame(csv.res)
xmean <- list()
ymean <- list()
val <- list()
prob <- csv.res$output
path <- csv.res$name
for(i in 1:length(path)){
print(paste0("start ", i, "/", length(path)))
rst <- raster(path[i])
a <- extent(rst)
a <- as.vector(a)
xmean[i] <- a[1] + ((a[2] - a[1])/2)
ymean[i] <- a[3] + ((a[4] - a[3])/2)
val[i] <- as.numeric(prob[i])
}
haha <- cbind(xmean,ymean,val)
haha
write.csv(haha, "plot_nilai_prob2.csv")
